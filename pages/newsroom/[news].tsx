import NewsContent from "@/components/NewsContent/NewsContent";
import Head from "next/head";
import { gql, request } from "graphql-request";
import type { GetStaticPropsContext } from "next";
import { dataType } from "./index";

const News = ({ data }: { data: dataType }) => {
  return (
    <>
      <Head>
        <title>VSFG - Dynamic</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NewsContent data={data} />
    </>
  );
};

export default News;

export const getStaticPaths = async () => {
  const endpoint =
    "https://api-ap-south-1.hygraph.com/v2/cldqz7cus35l401um0na00i10/master";

  const query = gql`
    query getNewsContent {
      newsContents {
        id
        date
        title
        description {
          raw
        }
        banner {
          url
        }
        slug
      }
    }
  `;

  const data = await request(endpoint, query);

  const paths = data.newsContents.map(({ slug }: { slug: string }) => {
    return {
      params: { news: slug },
    };
  });

  return {
    paths: paths,
    fallback: "blocking",
  };
};

export const getStaticProps = async (context: GetStaticPropsContext) => {
  const endpoint =
    "https://api-ap-south-1.hygraph.com/v2/cldqz7cus35l401um0na00i10/master";

  const query = gql`
    query getSingleNewsContent($slug: String!) {
      newsContent(where: { slug: $slug }) {
        id
        date
        title
        description {
          raw
        }
        banner {
          url
        }
        slug
      }
    }
  `;

  const variable = {
    slug: context.params!.news,
  };

  const data = await request(endpoint, query, variable);
  return {
    props: { data: data.newsContent },
    revalidate: 10,
  };
};
